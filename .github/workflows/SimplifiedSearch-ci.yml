name: SimplifiedSearch-ci

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]

env:
  BuildConfiguration: Release

jobs:
  build-and-test:
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        os: [ 'windows-latest', 'ubuntu-latest', 'macos-latest' ]

    steps:
    - uses: actions/checkout@v2
    
    - name: Setup .NET 3.1
      uses: actions/setup-dotnet@v1
      with:
        dotnet-version: 3.1.x
    
    - name: Setup .NET 6.0
      uses: actions/setup-dotnet@v1
      with:
        dotnet-version: 6.0.x
        
    - name: Setup .NET 7.0
      uses: actions/setup-dotnet@v2
      with:
        dotnet-version: '7.0.x'

    - name: Restore dependencies
      run: dotnet restore
    - name: Build
      run: dotnet build -c ${{ env.BuildConfiguration }} --no-restore
    - name: Test
      run: dotnet test -c ${{ env.BuildConfiguration }} --no-build

  mutation-test:
    runs-on: ubuntu-latest

    steps:
    - uses: actions/checkout@v2

    - name: Setup .NET 7.0
      uses: actions/setup-dotnet@v2
      with:
        dotnet-version: '7.0.x'

    - name: Restore dependencies
      run: dotnet restore
    - name: Build
      run: dotnet build -c ${{ env.BuildConfiguration }} --no-restore
    - name: Tools
      run: dotnet tool restore

    - name: Stryker
      run: |
        breakLevel=82
        dotnet stryker \
          --break-at $breakLevel \
          --threshold-low $breakLevel \
          --threshold-high 90 \
          --reporter cleartext

  sonarcloud:
    runs-on: windows-2022
    steps:
      - name: Set up JDK 11
        uses: actions/setup-java@v1
        with:
          java-version: 1.11
      
      - uses: actions/checkout@v2
        with:
          fetch-depth: 0  # Shallow clones should be disabled for a better relevancy of analysis
      
      - name: Setup .NET 3.1
        uses: actions/setup-dotnet@v2
        with:
          dotnet-version: 3.1.x

      - name: Setup .NET 7.0
        uses: actions/setup-dotnet@v2
        with:
          dotnet-version: '7.0.x'
      
      - name: Cache SonarCloud packages
        uses: actions/cache@v1
        with:
          path: ~\sonar\cache
          key: ${{ runner.os }}-sonar
          restore-keys: ${{ runner.os }}-sonar
          
      - name: Cache SonarCloud scanner
        id: cache-sonar-scanner
        uses: actions/cache@v1
        with:
          path: .\.sonar\scanner
          key: ${{ runner.os }}-sonar-scanner
          restore-keys: ${{ runner.os }}-sonar-scanner
          
      - name: Install SonarCloud scanner
        if: steps.cache-sonar-scanner.outputs.cache-hit != 'true'
        shell: powershell
        run: |
          New-Item -Path .\.sonar\scanner -ItemType Directory
          dotnet tool update dotnet-sonarscanner --tool-path .\.sonar\scanner
          
      - name: Build and analyze
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}  # Needed to get PR information, if any
          SONAR_TOKEN: ${{ secrets.SONAR_TOKEN }}
        shell: powershell
        run: |
          .\.sonar\scanner\dotnet-sonarscanner begin /k:"tommysor_SimplifiedSearch" /o:"tommysor" /d:sonar.login="${{ secrets.SONAR_TOKEN }}" /d:sonar.host.url="https://sonarcloud.io" /d:sonar.cs.opencover.reportsPaths="**/*.opencover.xml"
          dotnet restore
          dotnet build SimplifiedSearch.sln -c ${{ env.BuildConfiguration }} --no-restore
          dotnet test -c ${{ env.BuildConfiguration }} --no-build --logger:trx --collect:"XPlat Code Coverage" -- DataCollectionRunSettings.DataCollectors.DataCollector.Configuration.Format=opencover
          .\.sonar\scanner\dotnet-sonarscanner end /d:sonar.login="${{ secrets.SONAR_TOKEN }}"
