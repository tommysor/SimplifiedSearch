<Project Sdk="Microsoft.NET.Sdk">

  <PropertyGroup>
    <TargetFrameworks>netstandard2.0;netstandard2.1</TargetFrameworks>
    <Nullable>enable</Nullable>
	<LangVersion>latest</LangVersion>

	  <PackageId>SimplifiedSearch</PackageId>
	  <Authors>Tommy Sørbråten</Authors>
	  <PackageLicenseExpression>MIT</PackageLicenseExpression>
	  <RepositoryUrl>https://github.com/tommysor/SimplifiedSearch.git</RepositoryUrl>
	  <IncludeSymbols>true</IncludeSymbols>
	  <EmbedUntrackedSources>true</EmbedUntrackedSources>
      <SymbolPackageFormat>snupkg</SymbolPackageFormat>
	  <PackageProjectUrl>https://github.com/tommysor/SimplifiedSearch</PackageProjectUrl>
	  <Description>
Simple way to add ranked fuzzy matching search.
For when you have up to a few thousand products, locations or similar and want to add a search that most users will see as smart, with minimal work.
		  
using SimplifiedSearch;
IList&lt;Country&gt; matches = await listOfCountries.SimplifiedSearchAsync("thaiwan", x =&gt; x.CountryName);
foreach (var country in matches)
    Console.WriteLine(country.CountryName);
// output:
// Taiwan
// Thailand
	  </Description>
	  <PackageReadmeFile>README.md</PackageReadmeFile>
	  <PackageTags>simple ranked fuzzy search</PackageTags>
  </PropertyGroup>
  
  <ItemGroup>
      <None Include="..\..\README.md" Pack="true" PackagePath="\" />
  </ItemGroup>

  <ItemGroup>
    <PackageReference Include="Fastenshtein" Version="1.0.0.8" />
    <PackageReference Include="Microsoft.SourceLink.GitHub" Version="8.0.0">
      <PrivateAssets>all</PrivateAssets>
      <IncludeAssets>runtime; build; native; contentfiles; analyzers; buildtransitive</IncludeAssets>
    </PackageReference>
    <PackageReference Include="Unidecode.NET" Version="2.1.0" />
  </ItemGroup>

</Project>
