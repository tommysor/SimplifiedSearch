# Starter pipeline

# Start with a minimal pipeline that you can customize to build and deploy your code.
# Add steps that build, run tests, deploy, and more:
# https://aka.ms/yaml

trigger:
- none

pool:
  vmImage: ubuntu-latest

variables:
  buildConfiguration: 'Release'

steps:
- task: UseDotNet@2
  displayName: 'Install NET6.0'
  inputs:
    packageType: 'sdk'
    version: '6.x'

- task: DotNetCoreCLI@2
  displayName: 'Restore'
  inputs:
    command: 'restore'
    projects: '**/*.csproj'
    feedsToUse: 'select'

- script: |
    export OnlyBuildNetStandard2_0=True
    echo '!!! BUILD !!!'
    # C:\src\tests\SimplifiedSearch.Tests
    dotnet build 'tests/SimplifiedSearch.Tests/SimplifiedSearch.Tests.csproj' --no-restore -c $(buildConfiguration) -f net6.0
    echo '!!! TEST !!!'
    dotnet test 'tests/SimplifiedSearch.Tests/SimplifiedSearch.Tests.csproj' --no-build -c $(buildConfiguration) -f net6.0
    echo '---'
    echo $OnlyBuildNetStandard2_0
    echo '---'
    unset OnlyBuildNetStandard2_0
    echo '---'
    echo $OnlyBuildNetStandard2_0
    echo '---'
  displayName: 'Test netstandard2.0'

- script: |
    echo '---'
    echo $OnlyBuildNetStandard2_0
    echo '---'
  displayName: '1 after OnlyBuildNetStandard2_0'

- task: DotNetCoreCLI@2
  displayName: 'Build netstandard2.0'
  inputs:
    command: 'build'
    projects: 'src/**/*.csproj'
    arguments: '--no-restore -c $(buildConfiguration)'

- script: |
    echo '---'
    echo $OnlyBuildNetStandard2_0
    echo '---'
  displayName: 'after build OnlyBuildNetStandard2_0'

- task: DotNetCoreCLI@2
  displayName: 'Build test project for netstandard2.0'
  inputs:
    command: 'build'
    projects: 'tests/**/*.csproj'
    arguments: '--no-restore --no-dependencies -c $(buildConfiguration) -f net6.0'

- task: DotNetCoreCLI@2
  displayName: 'Test netstandard2.0'
  inputs:
    command: 'test'
    projects: 'tests/**/*.csproj'
    arguments: '--no-build -c $(buildConfiguration) -f net6.0'

- script: |
    unset OnlyBuildNetStandard2_0
    echo ###
    echo $OnlyBuildNetStandard2_0
    echo ###
  displayName: 'remove OnlyBuildNetStandard2_0'

- task: UseDotNet@2
  displayName: 'Install NET5.0'
  inputs:
    packageType: 'sdk'
    version: '5.x'

- task: UseDotNet@2
  displayName: 'Install NET3.1'
  inputs:
    packageType: 'sdk'
    version: '3.1.x'



- task: DotNetCoreCLI@2
  displayName: 'Build'
  inputs:
    command: 'build'
    projects: '**/*.csproj'
    arguments: '--no-restore -c $(buildConfiguration)'

- task: DotNetCoreCLI@2
  displayName: 'Test'
  inputs:
    command: 'test'
    projects: 'tests/**/*.csproj'
    arguments: '--no-build -c $(buildConfiguration)'
