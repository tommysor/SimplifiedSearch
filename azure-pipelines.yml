# Starter pipeline

# Start with a minimal pipeline that you can customize to build and deploy your code.
# Add steps that build, run tests, deploy, and more:
# https://aka.ms/yaml

trigger: none
#  tags:
#    include:
#    - v*

pr:
  branches:
    include:
    - main

pool:
  vmImage: ubuntu-latest

variables:
  buildConfiguration: 'Release'
  branchIsTag: $[startsWith(variables['Build.SourceBranch'], 'refs/tags/v')]

steps:
# Intall .NET SDKs.
- task: UseDotNet@2
  displayName: 'Install NET6.0'
  inputs:
    packageType: 'sdk'
    version: '6.x'

- task: UseDotNet@2
  displayName: 'Install NET5.0'
  inputs:
    packageType: 'sdk'
    version: '5.x'

- task: UseDotNet@2
  displayName: 'Install NET3.1'
  inputs:
    packageType: 'sdk'
    version: '3.1.x'

# Restore.
- task: DotNetCoreCLI@2
  displayName: 'Restore'
  inputs:
    command: 'restore'
    projects: '**/*.csproj'
    feedsToUse: 'select'

# Test the netstandard2.0 version.
- task: DotNetCoreCLI@2
  displayName: 'Test netstandard2.0'
  env:
    OnlyBuildNetStandard2_0: True
  inputs:
    command: 'test'
    projects: 'tests/**/*.csproj'
    arguments: '--no-restore -c $(buildConfiguration) -f net6.0'

# Build ready for release.
- task: DotNetCoreCLI@2
  displayName: 'Build package'
  inputs:
    command: 'build'
    projects: 'src/**/*.csproj'
    arguments: '--no-restore -c $(buildConfiguration)'

# Run tests for all tested .NET SDKs.
- task: DotNetCoreCLI@2
  displayName: 'Build tests'
  inputs:
    command: 'build'
    projects: 'tests/**/*.csproj'
    arguments: '--no-restore -c $(buildConfiguration) --no-dependencies'

- task: DotNetCoreCLI@2
  displayName: 'Test'
  inputs:
    command: 'test'
    projects: 'tests/**/*.csproj'
    arguments: '--no-build -c $(buildConfiguration)'

# Pack and publish.
- task: DotNetCoreCLI@2
  displayName: 'Pack'
  condition: eq(variables['branchIsTag'], 'True')
  inputs:
    command: 'pack'
    packagesToPack: 'src/**/*.csproj'
    nobuild: true
    versioningScheme: 'off'

- task: PublishBuildArtifacts@1
  condition: eq(variables['branchIsTag'], 'True')
  inputs:
    PathtoPublish: '$(Build.ArtifactStagingDirectory)'
    ArtifactName: 'simplifiedSearchProjectBuilt'
    publishLocation: 'Container'
